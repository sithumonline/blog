<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sithum's Blog</title><link>https://sithum.online/blog/</link><description>Recent content on Sithum's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 20 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://sithum.online/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Container network</title><link>https://sithum.online/blog/container-network/</link><pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate><guid>https://sithum.online/blog/container-network/</guid><description>How the docker network works Like namespaces and cgroups the Linux kernel offers virtual ethernet device pairs and virtual bridge. Yes! you’re right, we can connect one ethernet device to the container and the other ethernet device to the bridge. After all, we can assign IP addresses and ping. Docker uses a library called llibnetwork for this.
How the Kubernetes network works What is CNI? CNI (Container Network Interface), a Cloud Native Computing Foundation project, consists of a specification and libraries for writing plugins to configure network interfaces in Linux containers, along with a number of supported plugins.</description></item><item><title>What is container?</title><link>https://sithum.online/blog/what-is-the-container/</link><pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate><guid>https://sithum.online/blog/what-is-the-container/</guid><description>What’s the container? Is it a VM? or a lightweight VM? Actually, containers aren&amp;rsquo;t VM or lightweight VM. ontainer is just a process in a Linux machine like many other processes; however when we start to work with it, it feels like a VM.
Containers were implemented using three old features on the Linux kernel.
Namespace Cgroup Copy on Write The Namespace referenced here is not the Kubernetes Namespace.</description></item></channel></rss>